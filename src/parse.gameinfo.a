;license:MIT
;(c) 2018 by 4am
;
; Parser for per-game configuration files
;
; Public functions
; - LoadGameInfo
;

!zone {
kTextRootDirectory
         !byte 5
         !raw "TEXT/"

gVersionsStore
         !word $FDFD                 ; set at runtime in LoadGlobalPreferences
gOptionsStore
         !word $FDFD                 ; set at runtime in LoadGameInfo

sectionPointers                      ; array of pointers to start of each section
addrEOF
         !word 0
addrOptions
         !word 0
addrVersions
         !word 0
addrDescription
         !word 0
addrInfo
         !word 0

;------------------------------------------------------------------------------
; LoadGameInfo
; load file with information about the current game
;
; in:    gCurrentGame between 0 and (kNumberOfGames-1)
; out:   addrInfo, addrDescription, addrVersions, addrOptions populated
;        all registers and flags clobbered
;------------------------------------------------------------------------------
LoadGameInfo
         jsr   ResetPath
         lda   #<kTextRootDirectory
         ldy   #>kTextRootDirectory
         jsr   AddToPath
         lda   gCurrentGame
         asl
         tax
         lda   GAMES,x
         ldy   GAMES+1,x
         jsr   AddToPath

         jsr   LoadFile
         !word gPathname
         !word $0800
         !word $1400
         !word kProDOSFileBuffer

         lda   #$FF
         sta   $FE
         lda   #$07
         sta   $FF                   ; ($FE) points to start of data buffer
         ldy   #$00                  ; index into ($FF) pointing to current character
         ldx   #$08                  ; index into sectionPointers array, stores pointer to start of each section

.convertSectionLoop
         jsr   IncAndGetChar
.convertSectionNoInc
         cmp   #$5B                  ; '[' is the start of a new section
         beq   .skipSectionName
         cmp   #$0D                  ; CR -> 0x00 (WeeGUI wants null-terminated strings)
         beq   .null
         cmp   #$5E                  ; '^' -> closed-apple mousetext
         beq   .ca
         cmp   #$26                  ; '&' -> open-apple mousetext
         beq   .oa
         ora   #$80                  ; all other characters -> set high bit
         !byte $2C
.null    lda   #$00
         !byte $2C
.ca      lda   #$40
         !byte $2C
.oa      lda   #$41
         sta   ($FE),y
         bra   .convertSectionLoop

; We found the start of a new section, so skip to the first character on the next line
.skipSectionName
         jsr   IncAndGetChar
         cmp   #$0D                  ; CR
         bne   .skipSectionName
         jsr   IncAndGetChar

; We are at the start of a section, so save this address in the sectionPointers array
         pha
         tya
         clc
         adc   $FE
         sta   sectionPointers,x
         lda   $FF
         bcc   +
         inc
+        sta   sectionPointers+1,x
         pla
         dex
         dex
         bpl   .convertSectionNoInc

; We are done converting the game info file.
; Now handle the individual sections that require further parsing.

         jsr   ParseKeyValueText     ; parse [versions] section into gVersionsStore
         !word gVersionsStore        ; (this handle was initialized in LoadGlobalPreferences)
         !word addrVersions
         !byte 0

         lda   SRC                   ; save pointer to free space for next store
         sta   gOptionsStore
         lda   SRC+1
         sta   gOptionsStore+1

         jsr   ParseKeyValueText     ; parse [options] section into gOptionsStore
         !word gOptionsStore
         !word addrOptions
         !byte 0

         rts
}
