;license:MIT
;(c) 2018 by 4am
;
; Game descriptions and configuration
;
; Public functions
; - LoadGameInfo
;
; Public variables
; - gCurrentGame
;
; Public constants
; - kNumberOfGames
; - GAMES
;

!zone {
kNumberOfGames = 33
gCurrentGame
         !byte $FD                   ; set at runtime
kTextRootDirectory
         !byte 5
         !raw "TEXT/"
GAMES                                ; length of this array must = kNumberOfGames, there is no range checking
         !word .amfv
         !word .ballyhoo
         !word .beyondzork
         !word .borderzone
         !word .bureaucracy
         !word .cutthroats
         !word .deadline
         !word .enchanter
         !word .hgttg
         !word .hollywoodhijinx
         !word .infidel
         !word .leathergoddesses
         !word .lurkinghorror
         !word .minizork
         !word .moonmist
         !word .nordandbert
         !word .planetfall
         !word .plunderedhearts
         !word .seastalker
         !word .sherlock
         !word .sorcerer
         !word .spellbreaker
         !word .starcross
         !word .stationfall
         !word .suspect
         !word .suspended
         !word .trinity
         !word .wishbringer
         !word .witness
         !word .zorki
         !word .zorkii
         !word .zorkiii
         !word .ztuu

; length-prefixed names of each subdirectory in game directory, 1 per game
.amfv
         !byte 4
         !raw  "AMFV"
.ballyhoo
         !byte 8
         !raw  "BALLYHOO"
.beyondzork
         !byte 11
         !raw  "BEYOND.ZORK"
.borderzone
         !byte 11
         !raw  "BORDER.ZONE"
.bureaucracy
         !byte 11
         !raw  "BUREAUCRACY"
.cutthroats
         !byte 10
         !raw  "CUTTHROATS"
.deadline
         !byte 8
         !raw  "DEADLINE"
.enchanter
         !byte 9
         !raw  "ENCHANTER"
.hgttg
         !byte 5
         !raw  "HGTTG"
.hollywoodhijinx
         !byte 9
         !raw  "HOLLYWOOD"
.infidel
         !byte 7
         !raw  "INFIDEL"
.leathergoddesses
         !byte 4
         !raw  "LGOP"
.lurkinghorror
         !byte 14
         !raw  "LURKING.HORROR"
.minizork
         !byte 9
         !raw  "MINI.ZORK"
.moonmist
         !byte 8
         !raw  "MOONMIST"
.nordandbert
         !byte 13
         !raw  "NORD.AND.BERT"
.planetfall
         !byte 10
         !raw  "PLANETFALL"
.plunderedhearts
         !byte 9
         !raw  "PLUNDERED"
.seastalker
         !byte 10
         !raw  "SEASTALKER"
.sherlock
         !byte 8
         !raw  "SHERLOCK"
.sorcerer
         !byte 8
         !raw  "SORCERER"
.spellbreaker
         !byte 12
         !raw  "SPELLBREAKER"
.starcross
         !byte 9
         !raw  "STARCROSS"
.stationfall
         !byte 11
         !raw  "STATIONFALL"
.suspect
         !byte 7
         !raw  "SUSPECT"
.suspended
         !byte 9
         !raw  "SUSPENDED"
.trinity
         !byte 7
         !raw  "TRINITY"
.wishbringer
         !byte 11
         !raw  "WISHBRINGER"
.witness
         !byte 7
         !raw  "WITNESS"
.zorki
         !byte 6
         !raw  "ZORK.I"
.zorkii
         !byte 7
         !raw  "ZORK.II"
.zorkiii
         !byte 8
         !raw  "ZORK.III"
.ztuu
         !byte 4
         !raw  "ZTUU"

sectionPointers                      ; array of pointers to start of each section
addrVersions
         !word 0
addrDescription
         !word 0
addrInfo
         !word 0

;------------------------------------------------------------------------------
; LoadGameInfo
; load file with information about the current game
;
; in:    gCurrentGame between 0 and (kNumberOfGames-1)
; out:   addrInfo, addrDescription, addrVersions populated
;        all registers and flags clobbered
;------------------------------------------------------------------------------
LoadGameInfo
         jsr   ResetPath
         lda   #<kTextRootDirectory
         ldy   #>kTextRootDirectory
         jsr   AddToPath
         lda   gCurrentGame
         asl
         tax
         lda   GAMES,x
         ldy   GAMES+1,x
         jsr   AddToPath

         jsr   LoadFile
         !word gPathname
         !word $0800
         !word $1400
         !word kProDOSFileBuffer

         lda   #$FF
         sta   $00
         lda   #$07
         sta   $01                   ; ($00) points to start of data buffer
         ldy   #$00                  ; index into ($00) pointing to current character
         ldx   #$04                  ; index into sectionPointers array, stores pointer to start of each section

.convertSectionLoop
         jsr   IncAndGetChar
.convertSectionNoInc
         cmp   #$5B                  ; '['
         beq   .skipSectionName
         cmp   #$0A                  ; LF -> 0x00 (WeeGUI wants null-terminated strings)
         beq   .null
         cmp   #$5E                  ; '^' -> closed-apple mousetext
         beq   .ca
         cmp   #$26                  ; '&' -> open-apple mousetext
         beq   .oa
         ora   #$80
         !byte $2C
.null    lda   #$00
         !byte $2C
.ca      lda   #$40
         !byte $2C
.oa      lda   #$41
         sta   ($00),y
         bra   .convertSectionLoop

; We found the start of a new section, so skip to the first character on the next line
.skipSectionName
         jsr   IncAndGetChar
         cmp   #$0A                  ; LF
         bne   .skipSectionName
         jsr   IncAndGetChar

; We are at the start of a section, so save this address in the sectionPointers array
         pha
         tya
         clc
         adc   $00
         sta   sectionPointers,x
         lda   $01
         bcc   +
         inc
+        sta   sectionPointers+1,x
         pla
         dex
         dex
         bpl   .convertSectionNoInc

IncAndGetChar
         iny
         bne   +
         inc   $01
+        lda   ($00),y
         rts
}
